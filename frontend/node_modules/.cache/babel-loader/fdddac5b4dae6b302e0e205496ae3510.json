{"ast":null,"code":"var _jsxFileName = \"/Users/clarissescofield/Desktop/POC/lectio/src/features/pln/views/PlnSentimentCsv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { readString } from \"react-papaparse\";\nimport goodreadsSentiment from \"../../../assets/csv/goodreads_reviews_sentiment.csv\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport Icon from \"@mui/material/Icon\";\nimport { getLineAndCharacterOfPosition } from \"typescript\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PlnSentimentCsv() {\n  _s();\n\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n\n      if (order !== 0) {\n        return order;\n      }\n\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n  } //id\trating\tvotes\tread_at\tread_count\tcomments_count\tbook_id\treview_text\tuser_id\tuser_name\tuser_location\tread_status\treview_language\treview_body\tcompound\tneg\tneu\tpos\ttb_Pol\ttb_Subj\n\n\n  const headCells = [{\n    id: \"id\",\n    numeric: true,\n    disablePadding: true,\n    label: \"ID\"\n  }, {\n    id: \"rating\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Rating\"\n  }, {\n    id: \"read_at\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Data leitura\"\n  }, {\n    id: \"read_count\",\n    numeric: true,\n    disablePadding: false,\n    label: \"N. de leituras\"\n  }, {\n    id: \"comments_count\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Número de comentários\"\n  }, {\n    id: \"book_id\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Id livro\"\n  }, {\n    id: \"review_text\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Texto Review\"\n  }, {\n    id: \"user_id\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Id user\"\n  }, {\n    id: \"user_name\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Nome user\"\n  }, {\n    id: \"user_location\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Localização user\"\n  }, {\n    id: \"read_status\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Status\"\n  }, {\n    id: \"review_language\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Idioma review\"\n  }, {\n    id: \"review_body\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Texto review\"\n  }, {\n    id: \"compound\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Compound\"\n  }, {\n    id: \"neg\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Negativo\"\n  }, {\n    id: \"neu\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Neutro\"\n  }, {\n    id: \"pos\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Positivo\"\n  }, {\n    id: \"tb_Pol\",\n    numeric: true,\n    disablePadding: false,\n    label: \"TextBlob Polaridade\"\n  }, {\n    id: \"tb_Subj\",\n    numeric: true,\n    disablePadding: false,\n    label: \"TextBlob Subjetividade\"\n  }];\n\n  function EnhancedTableHead(props) {\n    const {\n      order,\n      orderBy,\n      onRequestSort\n    } = props;\n\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n\n    return /*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n          align: headCell.numeric ? \"right\" : \"left\",\n          padding: headCell.disablePadding ? \"none\" : \"normal\",\n          sortDirection: orderBy === headCell.id ? order : false,\n          children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n            active: orderBy === headCell.id,\n            direction: orderBy === headCell.id ? order : \"asc\",\n            onClick: createSortHandler(headCell.id),\n            children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n              component: \"span\",\n              sx: visuallyHidden,\n              children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, headCell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n\n  EnhancedTableHead.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired\n  };\n\n  const EnhancedTableToolbar = props => {\n    //const { numSelected } = props;\n    return /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: {\n        pl: {\n          sm: 2\n        },\n        pr: {\n          xs: 1,\n          sm: 1\n        },\n        ...{\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          flex: \"1 1 100%\"\n        },\n        variant: \"h6\",\n        id: \"tableTitle\",\n        component: \"div\",\n        children: \"goodreads_reviews_sentiment.csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Filter list\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            baseClassName: \"fas\",\n            className: \"fa-regular fa-filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  };\n\n  EnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired\n  };\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"titulo\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = useState([]);\n  const dados = [];\n\n  function readCsv() {\n    const linhaTemp = [];\n    const papaConfig = {\n      delimiter: \";\",\n      header: \"true\",\n      complete: (results, file) => {\n        //setDados(results.data);\n        dados.push(results.data);\n        dados[0].forEach(item => {\n          linhaTemp.push(item);\n        });\n        setRows(linhaTemp);\n        console.log(\"linhas: \", rows);\n      },\n      download: true,\n      error: (error, file) => {\n        console.log(\"Error while parsing:\", error, file);\n      }\n    };\n    readString(goodreadsSentiment, papaConfig);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  }; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  readCsv();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          width: \"100%\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 750\n            },\n            \"aria-labelledby\": \"tableTitle\",\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n              order: order,\n              orderBy: orderBy,\n              onRequestSort: handleRequestSort\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n                const labelId = `enhanced-table-checkbox-${index}`;\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  onClick: event => handleClick(event, row.id),\n                  role: \"checkbox\",\n                  tabIndex: -1,\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    id: labelId,\n                    scope: \"row\",\n                    padding: \"none\",\n                    children: row.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.rating\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.votes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.read_at\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.read_count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.comments_count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.book_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.review_text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.user_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.user_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.user_location\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.read_status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.review_language\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.review_body\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.compound\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.neg\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.neu\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.pos\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.tb_Pol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: row.tb_Subj\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 25\n                  }, this)]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this);\n              }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                style: {\n                  height: (dense ? 33 : 53) * emptyRows\n                },\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 6\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 25],\n          component: \"div\",\n          count: rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PlnSentimentCsv, \"SPJqrcOMK60qq5WEhYD8ElGnBYc=\");\n\n_c = PlnSentimentCsv;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlnSentimentCsv\");","map":{"version":3,"sources":["/Users/clarissescofield/Desktop/POC/lectio/src/features/pln/views/PlnSentimentCsv.js"],"names":["React","useEffect","useState","readString","goodreadsSentiment","PropTypes","alpha","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","IconButton","Tooltip","FormControlLabel","Switch","visuallyHidden","Icon","getLineAndCharacterOfPosition","PlnSentimentCsv","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","onRequestSort","createSortHandler","property","event","headCell","propTypes","func","isRequired","oneOf","string","EnhancedTableToolbar","pl","sm","pr","xs","bgcolor","theme","palette","primary","main","action","activatedOpacity","flex","numSelected","number","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","setRows","dados","readCsv","linhaTemp","papaConfig","delimiter","header","complete","results","file","push","data","forEach","item","console","log","download","error","handleRequestSort","isAsc","handleClick","name","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","handleChangeDense","checked","emptyRows","Math","max","width","mb","minWidth","row","labelId","rating","votes","read_at","read_count","comments_count","book_id","review_text","user_id","user_name","user_location","read_status","review_language","review_body","compound","neg","neu","pos","tb_Pol","tb_Subj","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { readString } from \"react-papaparse\";\nimport goodreadsSentiment from \"../../../assets/csv/goodreads_reviews_sentiment.csv\";\nimport PropTypes from \"prop-types\";\nimport { alpha } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport { visuallyHidden } from \"@mui/utils\";\nimport Icon from \"@mui/material/Icon\";\nimport { getLineAndCharacterOfPosition } from \"typescript\";\n\nexport default function PlnSentimentCsv() {\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  function getComparator(order, orderBy) {\n    return order === \"desc\"\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n\n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) {\n        return order;\n      }\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\n  //id\trating\tvotes\tread_at\tread_count\tcomments_count\tbook_id\treview_text\tuser_id\tuser_name\tuser_location\tread_status\treview_language\treview_body\tcompound\tneg\tneu\tpos\ttb_Pol\ttb_Subj\n  const headCells = [\n    {\n      id: \"id\",\n      numeric: true,\n      disablePadding: true,\n      label: \"ID\"\n    },\n    {\n      id: \"rating\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Rating\"\n    },\n    {\n      id: \"read_at\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Data leitura\"\n    },\n    {\n      id: \"read_count\",\n      numeric: true,\n      disablePadding: false,\n      label: \"N. de leituras\"\n    },\n    {\n      id: \"comments_count\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Número de comentários\"\n    },\n    {\n      id: \"book_id\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Id livro\"\n    },\n    {\n      id: \"review_text\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Texto Review\"\n    },\n    {\n      id: \"user_id\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Id user\"\n    },\n    {\n      id: \"user_name\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Nome user\"\n    },\n    {\n      id: \"user_location\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Localização user\"\n    },\n    {\n      id: \"read_status\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Status\"\n    },\n    {\n      id: \"review_language\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Idioma review\"\n    },\n    {\n      id: \"review_body\",\n      numeric: false,\n      disablePadding: false,\n      label: \"Texto review\"\n    },\n    {\n      id: \"compound\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Compound\"\n    },\n    {\n      id: \"neg\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Negativo\"\n    },\n    {\n      id: \"neu\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Neutro\"\n    },\n    {\n      id: \"pos\",\n      numeric: true,\n      disablePadding: false,\n      label: \"Positivo\"\n    },\n    {\n      id: \"tb_Pol\",\n      numeric: true,\n      disablePadding: false,\n      label: \"TextBlob Polaridade\"\n    },\n    {\n      id: \"tb_Subj\",\n      numeric: true,\n      disablePadding: false,\n      label: \"TextBlob Subjetividade\"\n    }\n  ];\n\n  function EnhancedTableHead(props) {\n    const { order, orderBy, onRequestSort } = props;\n\n    const createSortHandler = (property) => (event) => {\n      onRequestSort(event, property);\n    };\n\n    return (\n      <TableHead>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? \"right\" : \"left\"}\n              padding={headCell.disablePadding ? \"none\" : \"normal\"}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : \"asc\"}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <Box component=\"span\" sx={visuallyHidden}>\n                    {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n\n  EnhancedTableHead.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired\n  };\n\n  const EnhancedTableToolbar = (props) => {\n    //const { numSelected } = props;\n\n    return (\n      <Toolbar\n        sx={{\n          pl: { sm: 2 },\n          pr: { xs: 1, sm: 1 },\n          ...{\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.activatedOpacity)\n          }\n        }}\n      >\n        <Typography sx={{ flex: \"1 1 100%\" }} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          goodreads_reviews_sentiment.csv\n        </Typography>\n\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Icon baseClassName=\"fas\" className=\"fa-regular fa-filter\" />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    );\n  };\n\n  EnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired\n  };\n\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"titulo\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, setRows] = useState([]);\n  const dados = [];\n\n  function readCsv() {\n    const linhaTemp = [];\n    const papaConfig = {\n      delimiter: \";\",\n      header: \"true\",\n      complete: (results, file) => {\n        //setDados(results.data);\n        dados.push(results.data);\n        dados[0].forEach((item) => {\n          linhaTemp.push(item);\n        });\n        setRows(linhaTemp);\n        console.log(\"linhas: \", rows);\n      },\n      download: true,\n      error: (error, file) => {\n        console.log(\"Error while parsing:\", error, file);\n      }\n    };\n\n    readString(goodreadsSentiment, papaConfig);\n  }\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  readCsv();\n\n  return (\n    <>\n      <Box sx={{ width: \"100%\" }}>\n        <Paper sx={{ width: \"100%\", mb: 2 }}>\n          <EnhancedTableToolbar numSelected={selected.length} />\n          <TableContainer>\n            <Table sx={{ minWidth: 750 }} aria-labelledby=\"tableTitle\" size={\"small\"}>\n              <EnhancedTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n              <TableBody>\n                {stableSort(rows, getComparator(order, orderBy))\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row, index) => {\n                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                    return (\n                      <TableRow\n                        hover\n                        onClick={(event) => handleClick(event, row.id)}\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={row.id}\n                      >\n                        <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                          {row.id}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.rating}</TableCell>\n                        <TableCell align=\"right\">{row.votes}</TableCell>\n                        <TableCell align=\"right\">{row.read_at}</TableCell>\n                        <TableCell align=\"right\">{row.read_count}</TableCell>\n                        <TableCell align=\"right\">{row.comments_count}</TableCell>\n                        <TableCell align=\"right\">{row.book_id}</TableCell>\n                        <TableCell align=\"right\">{row.review_text}</TableCell>\n                        <TableCell align=\"right\">{row.user_id}</TableCell>\n                        <TableCell align=\"right\">{row.user_name}</TableCell>\n                        <TableCell align=\"right\">{row.user_location}</TableCell>\n                        <TableCell align=\"right\">{row.read_status}</TableCell>\n                        <TableCell align=\"right\">{row.review_language}</TableCell>\n                        <TableCell align=\"right\">{row.review_body}</TableCell>\n                        <TableCell align=\"right\">{row.compound}</TableCell>\n                        <TableCell align=\"right\">{row.neg}</TableCell>\n                        <TableCell align=\"right\">{row.neu}</TableCell>\n                        <TableCell align=\"right\">{row.pos}</TableCell>\n                        <TableCell align=\"right\">{row.tb_Pol}</TableCell>\n                        <TableCell align=\"right\">{row.tb_Subj}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                {emptyRows > 0 && (\n                  <TableRow\n                    style={{\n                      height: (dense ? 33 : 53) * emptyRows\n                    }}\n                  >\n                    <TableCell colSpan={6} />\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Box>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}